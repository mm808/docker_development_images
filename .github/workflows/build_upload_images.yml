name: Build and Upload development container images

on:
  workflow_dispatch:

env:
  DOCKER_REPO: "mattman70"

permissions:
  # id-token: write # this is needed to use OIDC token
  contents: read
jobs:
  Get_Docker_Files:
    name: Get Dockerfiles
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get_dockerfiles.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4

      - name: Generate docker subpaths as JSON array
        id: get_dockerfiles
        run: |
          subpaths=$(find dockerfiles -mindepth 2 -maxdepth 2 -type d | sed 's|^dockerfiles/||')
          json_array=$(printf '%s\n' "$subpaths" | jq -R . | jq -s .)
          echo "matrix=$json_array" >> $GITHUB_OUTPUT

  Build_and_Upload:
    runs-on: ubuntu-latest
    needs: Get_Docker_Files
    if: ${{ needs.Get_Docker_Files.outputs.matrix != '[]' }}
    name: Build and Upload devcontainer
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.Get_Docker_Files.outputs.matrix) }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: echo matrix
        shell: bash
        run: "echo Dockerfile: ${{ matrix.dockerfile }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_REPO }}
          password: ${{ secrets.DOCKER_PASSWD }}

      - name: Configure build
        shell: bash
        run: |
          echo "Working on ${{ matrix.dockerfile }}"
          name=${{ matrix.dockerfile }}
          suffix="${name##*_}}"
          echo "SUFFIX=${suffix}" >> $GITHUB_ENV
          if [[ "${suffix}" == "arm64" ]]; then
            PLATFORM="linux/arm64"
          elif [[ "${suffix}" == "amd64" ]]; then
            PLATFORM="linux/amd64"
          else
            echo "Unknown architecture: ${suffix}"
            exit 1
          fi
          echo "PLATFORM=${PLATFORM}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: .devcontainer/${{ matrix.dockerfile }}
          platforms: ${{ env.PLATFORM }}
          push: true
          tags: ${{ env.DOCKER_REPO }}/awscli_ansible_tf1_12_2_${{ env.SUFFIX }}:latest
